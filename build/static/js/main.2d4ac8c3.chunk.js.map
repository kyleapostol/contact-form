{"version":3,"sources":["components/Success.js","components/Form.js","App.js","index.js"],"names":["Success","Fragment","title","React","Component","Form","props","handleSubmit","e","preventDefault","handleNameChange","RegExp","test","target","value","length","setState","name","nameError","handleEmailChange","email","emailError","console","log","handleMessageChange","message","messageError","handleChangeView","view","state","this","floatingLabelText","label","errorText","onChange","multiline","rows","maxLength","primary","style","StyleSheet","button","onSubmit","App","className","ReactDOM","render","document","getElementById"],"mappings":"oQAIqBA,E,uKAGb,OACI,kBAAC,IAAD,KACI,kBAAC,IAAMC,SAAP,KACI,kBAAC,IAAD,CAAQC,MAAM,YACd,6DACA,kE,GARiBC,IAAMC,WCItBC,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAYVC,aAAe,SAAAC,GACXA,EAAEC,kBAdY,EAiBlBC,iBAAmB,SAAAF,GACQG,OAAO,gBAEZC,KAAKJ,EAAEK,OAAOC,QAAUN,EAAEK,OAAOC,MAAMC,OAAS,GAC9D,EAAKC,SAAS,CAAEC,KAAOT,EAAEK,OAAOC,QAChC,EAAKE,SAAS,CAAEE,UAAY,MAE5B,EAAKF,SAAS,CAAEE,UAAY,mBAxBlB,EA4BlBC,kBAAoB,SAAAX,GACQG,OAAO,iDAEZC,KAAKJ,EAAEK,OAAOC,QAC7B,EAAKE,SAAS,CAAEI,MAAQZ,EAAEK,OAAOC,QACjC,EAAKE,SAAS,CAAEK,WAAa,OAE7BC,QAAQC,IAAI,kBACZ,EAAKP,SAAS,CAAEK,WAAa,oBApCnB,EAwClBG,oBAAsB,SAAAhB,GACdA,EAAEK,OAAOC,MAAMC,OAAS,GACxB,EAAKC,SAAS,CAAES,QAAUjB,EAAEK,OAAOC,QACnC,EAAKE,SAAS,CAAEU,aAAe,MAE/B,EAAKV,SAAS,CAAEU,aAAe,mBA7CrB,EAiDlBC,iBAAmB,WACf,EAAKX,SAAS,CAAEY,KAAO,kBAhDvB,EAAKC,MAAQ,CACTZ,KAAO,GACPC,UAAY,GACZE,MAAQ,GACRC,WAAa,GACbI,QAAU,GACVC,aAAc,GACdE,KAAM,QATI,E,qDAwDd,OAAQE,KAAKD,MAAMD,MACf,QACI,OACI,kBAAC,IAAD,KACI,kBAAC,IAAM3B,SAAP,KACI,kBAAC,IAAD,CAAQC,MAAM,iBACd,kBAAC,IAAD,CACI6B,kBAAkB,kBAClBC,MAAM,OACNC,UAAYH,KAAKD,MAAMX,UACvBgB,SAAWJ,KAAKpB,mBAEpB,6BACA,kBAAC,IAAD,CACIqB,kBAAkB,mBAClBC,MAAM,QACNC,UAAYH,KAAKD,MAAMR,WACvBa,SAAWJ,KAAKX,oBAEpB,6BACA,kBAAC,IAAD,CACIgB,UAAU,OACVC,KAAM,EACNL,kBAAkB,qBAClBC,MAAM,UACNK,UAAU,KACVH,SAAWJ,KAAKN,oBAChBS,UAAYH,KAAKD,MAAMH,eAE3B,6BACA,kBAAC,IAAD,CACIM,MAAM,SACNM,SAAS,EACTC,MAAOC,WAAWC,OAElBC,SAAaZ,KAAKvB,iBAMtC,IAAK,eACD,OAAO,kBAAC,EAAD,W,GAnGWJ,IAAMC,WCKzBuC,MARf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,QCJNC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2d4ac8c3.chunk.js","sourcesContent":["import React from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\n\nexport default class Success extends React.Component{\n    \n    render(){    \n        return(\n            <MuiThemeProvider>\n                <React.Fragment>\n                    <AppBar title=\"Success\"/>\n                    <h2>Thank You For Your Submission</h2>\n                    <p>You will get an email shortly</p>\n                </React.Fragment>\n            </MuiThemeProvider>\n        )\n    }\n}","import React from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nimport Success from './Success'\n\nexport default class Form extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            name : '',\n            nameError : '',\n            email : '',\n            emailError : '',\n            message : '',\n            messageError: '',\n            view: 'form'\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n    }\n\n    handleNameChange = e => {\n        const nameValidation = RegExp(/^[a-zA-Z]*$/g);\n\n        if(nameValidation.test(e.target.value) && e.target.value.length > 1){\n            this.setState({ name : e.target.value})\n            this.setState({ nameError : ''})\n        }else{\n            this.setState({ nameError : 'invalid input'})\n        }\n    }\n\n    handleEmailChange = e => {\n        const emailValidation = RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n\n        if(emailValidation.test(e.target.value)){\n            this.setState({ email : e.target.value})\n            this.setState({ emailError : ''})\n        }else{\n            console.log('invalid input ')\n            this.setState({ emailError : 'invalid input'})\n        }\n    }\n\n    handleMessageChange = e => {\n        if( e.target.value.length > 1 ){\n            this.setState({ message : e.target.value})\n            this.setState({ messageError : ''})\n        }else{\n            this.setState({ messageError : \"Add more text\" })\n        }\n    }\n\n    handleChangeView = () => {\n        this.setState({ view : 'confirmation' })\n    \n    }\n \n\n    render(){    \n        switch( this.state.view ){\n            default :\n                return(\n                    <MuiThemeProvider>\n                        <React.Fragment>\n                            <AppBar title=\"Contact Form\"/>\n                            <TextField \n                                floatingLabelText=\"Enter Your Name\"\n                                label=\"Name\"\n                                errorText={ this.state.nameError }\n                                onChange={ this.handleNameChange }\n                            />\n                            <br/>\n                            <TextField \n                                floatingLabelText=\"Enter Your Email\"\n                                label=\"Email\"\n                                errorText={ this.state.emailError }\n                                onChange={ this.handleEmailChange }\n                            />\n                            <br/>\n                            <TextField\n                                multiline='true'\n                                rows={4}\n                                floatingLabelText=\"Enter Your Message\"\n                                label=\"Message\"\n                                maxLength=\"25\"\n                                onChange={ this.handleMessageChange }\n                                errorText={ this.state.messageError }\n                            />\n                            <br/>\n                            <RaisedButton\n                                label=\"submit\"\n                                primary={true}\n                                style={StyleSheet.button}\n                                // onClick = { this.handleChangeView }\n                                onSubmit = { this.handleSubmit }\n                            />\n                        </React.Fragment>\n                    </MuiThemeProvider>\n                )\n                break;\n            case 'confirmation':\n                return <Success></Success>\n                break;\n        }\n    }\n}\n\n\n","import React from 'react';\nimport './App.css';\nimport Form from './components/Form'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form></Form>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}